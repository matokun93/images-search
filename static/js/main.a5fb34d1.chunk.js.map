{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","photos","setPhotos","initialValues","search","onSubmit","values","a","fetch","headers","response","json","data","results","className","name","placeholder","icon","faMagnifyingGlass","map","photo","onClick","url","links","html","window","open","src","urls","regular","description","alt_description","join","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAoDeA,EA3CH,WACV,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAGA,OACE,gCACE,iCACE,cAAC,IAAD,CACEC,cAAe,CAAEC,OAAQ,IACzBC,SAAQ,uCAAE,WAAMC,GAAN,iBAAAC,EAAA,sEACeC,MAAM,4DAAD,OAA6DF,EAAOF,QAAU,CACxGK,QAAS,CACP,cAAiB,2DAHb,cACFC,EADE,gBAMWA,EAASC,OANpB,OAMFC,EANE,OAORV,EAAUU,EAAKC,SAPP,2CAAF,sDAFV,SAYE,cAAC,IAAD,UACE,sBAAKC,UAAU,eAAf,UACE,cAAC,IAAD,CAAOC,KAAK,SAASC,YAAY,WACjC,wBAAQF,UAAU,gBAAlB,SACE,cAAC,IAAD,CAAiBG,KAAMC,iBAMjC,qBAAKJ,UAAU,YAAf,SACE,qBAAKA,UAAU,SAAf,SACGb,EAAOkB,KAAI,SAAAC,GAAK,OACf,0BAAwBC,QAAS,kBA9BxBC,EA8BwCF,EAAMG,MAAMC,KA9B5CC,OAAOC,KAAKJ,GAArB,IAACA,GA8BT,UACE,qBAAKK,IAAKP,EAAMQ,KAAKC,UACrB,kCAAK,CAACT,EAAMU,YAAaV,EAAMW,iBAAiBC,KAAK,KAArD,SAFYZ,EAAMa,eC7BjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a5fb34d1.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\nimport './Styles/header.css'\nimport './Styles/content.css'\nimport './Styles/article.css'\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nconst App = () => {\n  const [photos, setPhotos] = useState([])\n  const openPhoto = (url) => window.open(url)\n\n  return (\n    <div>\n      <header>\n        <Formik\n          initialValues={{ search: '' }}\n          onSubmit={async values => {\n            const response = await fetch(`https://api.unsplash.com/search/photos?per_page=20&query=${values.search}`, {\n              headers: {\n                'Authorization': 'Client-ID rXPkNgsB29-uynn0vY_HuzFyCETLXKVj42CELIlyQBs'\n              }\n            })\n            const data = await response.json()\n            setPhotos(data.results)\n          }}\n        >\n          <Form>\n            <div className='form-content'>\n              <Field name='search' placeholder='Buscar' />\n              <button className='submit-button'>\n                <FontAwesomeIcon icon={faMagnifyingGlass} />\n              </button>\n            </div>\n          </Form>\n        </Formik>\n      </header>\n      <div className='container'>\n        <div className='center'>\n          {photos.map(photo =>\n            <article key={photo.id} onClick={() => openPhoto(photo.links.html)}>\n              <img src={photo.urls.regular} />\n              <p> {[photo.description, photo.alt_description].join('-')} </p>\n            </article>\n          )}\n        </div>\n      </div>\n    </div >\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}